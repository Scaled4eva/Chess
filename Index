// chessGame.js

const { Chess } = require('chess.js');
const inquirer = require('inquirer');

const game = new Chess();

function getBestMove(game) {
  // Basic AI: pick move that gives highest material gain
  const moves = game.moves({ verbose: true });

  let bestMove = null;
  let bestScore = -Infinity;

  for (const move of moves) {
    game.move(move);
    const score = evaluateBoard(game.board());
    game.undo();

    if (score > bestScore) {
      bestScore = score;
      bestMove = move;
    }
  }

  return bestMove || moves[Math.floor(Math.random() * moves.length)];
}

function evaluateBoard(board) {
  const pieceValues = {
    p: 1,
    n: 3,
    b: 3,
    r: 5,
    q: 9,
    k: 0,
  };

  let score = 0;

  for (const row of board) {
    for (const piece of row) {
      if (piece) {
        const value = pieceValues[piece.type];
        score += piece.color === 'b' ? value : -value;
      }
    }
  }

  return score;
}

async function userMove() {
  console.log(game.ascii());

  const moves = game.moves();
  const { move } = await inquirer.prompt([
    {
      type: 'list',
      name: 'move',
      message: 'Your move:',
      choices: moves,
    },
  ]);

  game.move(move);
}

async function aiMove() {
  const bestMove = getBestMove(game);
  game.move(bestMove);
  console.log(`\nAI plays: ${bestMove.san}\n`);
}

async function main() {
  console.log("Welcome to Chess vs AI (Node.js Edition)\n");

  while (!game.game_over()) {
    await userMove();
    if (game.game_over()) break;

    await aiMove();
  }

  console.log(game.ascii());

  if (game.in_checkmate()) {
    console.log("Checkmate!");
  } else if (game.in_stalemate()) {
    console.log("Stalemate!");
  } else if (game.in_draw()) {
    console.log("Draw!");
  } else if (game.insufficient_material()) {
    console.log("Draw due to insufficient material.");
  }

  console.log("Game over.");
}

main();
node chessGame.js
